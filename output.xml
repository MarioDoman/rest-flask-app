<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.8.10 on linux)" generated="20220311 12:44:39.340" rpa="false" schemaversion="2">
<suite id="s1" name="Test" source="/var/www/rest_app/app/test.robot">
<kw name="Setup Flask Http Server" library="res_setup" type="SETUP">
<kw name="Evaluate" library="BuiltIn">
<var>${platform}</var>
<arg>sys.platform</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220311 12:44:39.411" level="INFO">${platform} = linux</msg>
<status status="PASS" starttime="20220311 12:44:39.410" endtime="20220311 12:44:39.411"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${flask_cmd}</var>
<arg>'${platform}'=='win32'</arg>
<arg>/var/www/rest_app/app/run.cmd</arg>
<arg>/var/www/rest_app/app/run.sh</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220311 12:44:39.411" level="INFO">${flask_cmd} = /var/www/rest_app/app/run.sh</msg>
<status status="PASS" starttime="20220311 12:44:39.411" endtime="20220311 12:44:39.411"/>
</kw>
<kw name="Start Process" library="Process">
<arg>${flask_cmd}</arg>
<arg>cwd=/var/www/rest_app/app/</arg>
<arg>alias=flask</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20220311 12:44:39.411" level="INFO">Starting process:
/var/www/rest_app/app/run.sh</msg>
<status status="PASS" starttime="20220311 12:44:39.411" endtime="20220311 12:44:39.413"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>${GLOBAL_SESSION}</arg>
<arg>${HTTP_LOCAL_SERVER}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220311 12:44:39.413" level="INFO">Creating Session using : alias=global_session, url=http://localhost:5000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220311 12:44:39.413" endtime="20220311 12:44:39.413"/>
</kw>
<kw name="Wait Until Http Server Is Up And Running" library="res_setup">
<kw name="Create Session" library="RequestsLibrary">
<arg>wait-until-up</arg>
<arg>${HTTP_LOCAL_SERVER}</arg>
<arg>max_retries=10</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220311 12:44:39.414" level="INFO">Creating Session using : alias=wait-until-up, url=http://localhost:5000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220311 12:44:39.414" endtime="20220311 12:44:39.414"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<arg>wait-until-up</arg>
<arg>/persons</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220311 12:44:39.416" level="WARN">Retrying (RetryAdapter(total=9, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f02bae96760&gt;: Failed to establish a new connection: [Errno 111] Connection refused')': /persons</msg>
<msg timestamp="20220311 12:44:39.629" level="WARN">Retrying (RetryAdapter(total=8, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f02bae96a60&gt;: Failed to establish a new connection: [Errno 111] Connection refused')': /persons</msg>
<msg timestamp="20220311 12:44:39.631" level="INFO">GET Request : url=http://localhost:5000/persons 
 path_url=/persons 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220311 12:44:39.631" level="INFO">GET Response : url=http://localhost:5000/persons 
 status=200, reason=OK 
 headers={'Content-Type': 'application/json', 'Content-Length': '226', 'Server': 'Werkzeug/2.0.3 Python/3.8.10', 'Date': 'Fri, 11 Mar 2022 11:44:39 GMT'} 
 body={"person1": {"name": "Mario", "surname": "Doman", "height": 198, "age": 40}, "person2": {"name": "Palo", "surname": "Fritz", "height": 189, "age": 25}, "person3": {"name": "Peto", "surname": "Hans", "height": 176, "age": 17}}
 
 </msg>
<status status="PASS" starttime="20220311 12:44:39.414" endtime="20220311 12:44:39.631"/>
</kw>
<status status="PASS" starttime="20220311 12:44:39.414" endtime="20220311 12:44:39.631"/>
</kw>
<status status="PASS" starttime="20220311 12:44:39.410" endtime="20220311 12:44:39.631"/>
</kw>
<test id="s1-t1" name="Get Request http://localhost:5000/persons">
<kw name="GET" library="RequestsLibrary">
<var>${resp}</var>
<arg>${HTTP_LOCAL_SERVER}/persons</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20220311 12:44:39.634" level="INFO">GET Request : url=http://localhost:5000/persons 
 path_url=/persons 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220311 12:44:39.634" level="INFO">GET Response : url=http://localhost:5000/persons 
 status=200, reason=OK 
 headers={'Content-Type': 'application/json', 'Content-Length': '226', 'Server': 'Werkzeug/2.0.3 Python/3.8.10', 'Date': 'Fri, 11 Mar 2022 11:44:39 GMT'} 
 body={"person1": {"name": "Mario", "surname": "Doman", "height": 198, "age": 40}, "person2": {"name": "Palo", "surname": "Fritz", "height": 189, "age": 25}, "person3": {"name": "Peto", "surname": "Hans", "height": 176, "age": 17}}
 
 </msg>
<msg timestamp="20220311 12:44:39.634" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220311 12:44:39.632" endtime="20220311 12:44:39.634"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>OK</arg>
<arg>${resp}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220311 12:44:39.634" endtime="20220311 12:44:39.634"/>
</kw>
<tag>get</tag>
<status status="PASS" starttime="20220311 12:44:39.632" endtime="20220311 12:44:39.634"/>
</test>
<test id="s1-t2" name="Get Request on http://localhost:5000/persons/person1">
<kw name="GET" library="RequestsLibrary">
<var>${resp}</var>
<arg>${HTTP_LOCAL_SERVER}/persons/person1</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20220311 12:44:39.636" level="INFO">GET Request : url=http://localhost:5000/persons/person1 
 path_url=/persons/person1 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220311 12:44:39.636" level="INFO">GET Response : url=http://localhost:5000/persons/person1 
 status=200, reason=OK 
 headers={'Content-Type': 'application/json', 'Content-Length': '64', 'Server': 'Werkzeug/2.0.3 Python/3.8.10', 'Date': 'Fri, 11 Mar 2022 11:44:39 GMT'} 
 body={"name": "Mario", "surname": "Doman", "height": 198, "age": 40}
 
 </msg>
<msg timestamp="20220311 12:44:39.636" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220311 12:44:39.635" endtime="20220311 12:44:39.636"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${resp.json()}</arg>
<arg>{'name': 'Mario', 'surname': 'Doman', 'height': 198, 'age': 40}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220311 12:44:39.637" level="INFO">Argument types are:
&lt;class 'dict'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220311 12:44:39.636" endtime="20220311 12:44:39.637"/>
</kw>
<tag>get</tag>
<status status="PASS" starttime="20220311 12:44:39.634" endtime="20220311 12:44:39.637"/>
</test>
<test id="s1-t3" name="Put Request on http://localhost:5000/persons/person1">
<kw name="Run Process" library="Process">
<var>${resp}</var>
<arg>curl</arg>
<arg>-X</arg>
<arg>PUT</arg>
<arg>-d</arg>
<arg>name\=Testname</arg>
<arg>-d</arg>
<arg>surname\=TestSurname</arg>
<arg>-d</arg>
<arg>height\=150</arg>
<arg>-d</arg>
<arg>age\=11</arg>
<arg>${HTTP_LOCAL_SERVER}/persons/person1</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20220311 12:44:39.637" level="INFO">Starting process:
curl -X PUT -d name=Testname -d surname=TestSurname -d height=150 -d age=11 http://localhost:5000/persons/person1</msg>
<msg timestamp="20220311 12:44:39.640" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20220311 12:44:39.647" level="INFO">Process completed.</msg>
<msg timestamp="20220311 12:44:39.647" level="INFO">${resp} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20220311 12:44:39.637" endtime="20220311 12:44:39.647"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${resp.stdout}</arg>
<arg>{"name": "Testname", "surname": "TestSurname", "height": 150, "age": 11}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220311 12:44:39.647" endtime="20220311 12:44:39.648"/>
</kw>
<status status="PASS" starttime="20220311 12:44:39.637" endtime="20220311 12:44:39.648"/>
</test>
<test id="s1-t4" name="Delete Request on http://localhost:5000/persons/person1">
<kw name="Run Process" library="Process">
<var>${resp}</var>
<arg>curl</arg>
<arg>-X</arg>
<arg>DELETE</arg>
<arg>${HTTP_LOCAL_SERVER}/persons/person1</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20220311 12:44:39.648" level="INFO">Starting process:
curl -X DELETE http://localhost:5000/persons/person1</msg>
<msg timestamp="20220311 12:44:39.649" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20220311 12:44:39.653" level="INFO">Process completed.</msg>
<msg timestamp="20220311 12:44:39.654" level="INFO">${resp} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20220311 12:44:39.648" endtime="20220311 12:44:39.654"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>204</arg>
<arg>${resp.stdout}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220311 12:44:39.654" endtime="20220311 12:44:39.654"/>
</kw>
<status status="PASS" starttime="20220311 12:44:39.648" endtime="20220311 12:44:39.654"/>
</test>
<test id="s1-t5" name="POST Request on http://localhost:5000/persons">
<kw name="Run Process" library="Process">
<var>${resp}</var>
<arg>curl</arg>
<arg>-X</arg>
<arg>POST</arg>
<arg>-d</arg>
<arg>name\=Testname</arg>
<arg>-d</arg>
<arg>surname\=TestSurname</arg>
<arg>-d</arg>
<arg>height\=150</arg>
<arg>-d</arg>
<arg>age\=11</arg>
<arg>${HTTP_LOCAL_SERVER}/persons</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20220311 12:44:39.655" level="INFO">Starting process:
curl -X POST -d name=Testname -d surname=TestSurname -d height=150 -d age=11 http://localhost:5000/persons</msg>
<msg timestamp="20220311 12:44:39.656" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20220311 12:44:39.660" level="INFO">Process completed.</msg>
<msg timestamp="20220311 12:44:39.660" level="INFO">${resp} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20220311 12:44:39.655" endtime="20220311 12:44:39.660"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>{"name": "Testname", "surname": "TestSurname", "height": 150, "age": 11}</arg>
<arg>${resp.stdout}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220311 12:44:39.660" endtime="20220311 12:44:39.661"/>
</kw>
<status status="PASS" starttime="20220311 12:44:39.655" endtime="20220311 12:44:39.661"/>
</test>
<kw name="Teardown Flask Http Server And Sessions" library="res_setup" type="TEARDOWN">
<kw name="Delete All Sessions" library="RequestsLibrary">
<doc>Removes all the session objects</doc>
<msg timestamp="20220311 12:44:39.661" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20220311 12:44:39.661" endtime="20220311 12:44:39.662"/>
</kw>
<kw name="Switch Process" library="Process">
<arg>flask</arg>
<doc>Makes the specified process the current `active process`.</doc>
<status status="PASS" starttime="20220311 12:44:39.662" endtime="20220311 12:44:39.662"/>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20220311 12:44:39.662" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20220311 12:44:39.763" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20220311 12:44:39.662" endtime="20220311 12:44:39.763"/>
</kw>
<status status="PASS" starttime="20220311 12:44:39.661" endtime="20220311 12:44:39.763"/>
</kw>
<status status="PASS" starttime="20220311 12:44:39.340" endtime="20220311 12:44:39.763"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">get</stat>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="Test">Test</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20220311 12:44:39.416" level="WARN">Retrying (RetryAdapter(total=9, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f02bae96760&gt;: Failed to establish a new connection: [Errno 111] Connection refused')': /persons</msg>
<msg timestamp="20220311 12:44:39.629" level="WARN">Retrying (RetryAdapter(total=8, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f02bae96a60&gt;: Failed to establish a new connection: [Errno 111] Connection refused')': /persons</msg>
</errors>
</robot>
